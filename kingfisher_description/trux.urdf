<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- | This document was autogenerated by xacro from urdf/kingfisher_robotx.xacro | -->
<!-- | EDITING THIS FILE BY HAND IS NOT RECOMMENDED | -->
<!-- =================================================================================== -->
<robot name="Kingfisher" 
    xmlns:body="http://playerstage.sourceforge.net/gazebo/xmlschema/#body" 
    xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" 
    xmlns:gazebo="http://playerstage.sourceforge.net/gazebo/xmlschema/#gz" 
    xmlns:geom="http://playerstage.sourceforge.net/gazebo/xmlschema/#geom" 
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" 
    xmlns:joint="http://playerstage.sourceforge.net/gazebo/xmlschema/#joint" 
    xmlns:model="http://playerstage.sourceforge.net/gazebo/xmlschema/#model" 
    xmlns:physics="http://playerstage.sourceforge.net/gazebo/xmlschema/#physics" 
    xmlns:renderable="http://playerstage.sourceforge.net/gazebo/xmlschema/#renderable" 
    xmlns:rendering="http://playerstage.sourceforge.net/gazebo/xmlschema/#rendering" 
    xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" 
    xmlns:xacro="http://ros.org/wiki/xacro" 
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <material name="Black">
        <color rgba="0.0 0.0 0.0 1.0"/>
    </material>
    <material name="Gray">
        <color rgba="0.7 0.7 0.7 1.0"/>
    </material>
    <material name="DarkGray">
        <color rgba="0.2 0.2 0.2 1.0"/>
    </material>
    <material name="White">
        <color rgba="1.0 1.0 1.0 1.0"/>
    </material>
    <material name="Yellow">
        <color rgba="0.8 0.8 0.0 1.0"/>
    </material>
    <!-- com : center of mass -->
    <!-- in kg-->
    <!-- at center of mass aligned with coordinate system, kg*m^2-->
    <!-- BASE-FOOTPRINT -->
    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin, navigation stack depends on this frame -->
    <link name="base_footprint">
        <inertial>
            <mass value="0.0001"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="0.0001" ixy="0.0" ixz="0.0" iyy="0.0001" iyz="0.0" izz="0.0001"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
        </visual>
    </link>
    <gazebo reference="base_footprint">
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <joint name="base_footprint_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <parent link="base_footprint"/>
        <child link="base_link"/>
    </joint>
    <!-- BASE-LINK -->
    <!--Actual body/chassis of the robot-->
    <link name="base_link">
        <inertial>
            <mass value="29"/>
            <!--This is the pose of the inertial reference frame, relative to the link reference frame. The origin of the inertial reference frame needs to be at the center of gravity. The axes of the inertial reference frame do not need to be aligned with the principal axes of the inertia.-->
            <origin xyz="0 0 0"/>
            <!--The 3x3 rotational inertia matrix. Because the rotational inertia matrix is symmetric, only 6 above-diagonal elements of this matrix are specified here, using the attributes ixx, ixy, ixz, iyy, iyz, izz.-->
            <inertia ixx="10" ixy="0" ixz="0" iyy="10" iyz="0" izz="10"/>
        </inertial>
        <visual>
            <origin rpy="1.57079632679 0 1.57079632679" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://kingfisher_description/meshes/kingfisher_base.stl"/>
            </geometry>
            <material name="DarkGray"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.1 0.1 0.1"/>
                <!--making it slightly bigger in x and z direction-->
            </geometry>
        </collision>
    </link>
    <!-- Size of square 'camera' box -->
    <joint name="camera_joint" type="fixed">
        <axis xyz="0 1 0"/>
        <origin rpy="0 0 0" xyz="0.05 0 1"/>
        <parent link="base_link"/>
        <child link="camera_link"/>
    </joint>
    <!-- Camera -->
    <link name="camera_link">
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.05 0.05 0.05"/>
            </geometry>
            <material name="red"/>
        </visual>
        <inertial>
            <mass value="1e-5"/>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
        </inertial>
    </link>
    <gazebo reference="base_link">
        <material>Gazebo/FlatBlack</material>
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <joint name="base_footprint_left_panel_joint" type="fixed">
        <origin rpy="1.57079632679 0.0 1.57079632679" xyz="0.0 -0.35 0.05"/>
        <parent link="base_footprint"/>
        <child link="base_footprint_left_panel_part"/>
    </joint>
    <link name="base_footprint_left_panel_part">
        <inertial>
            <mass value="0.1"/>
            <origin xyz="0.0 0.0 0.0"/>
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://kingfisher_description/meshes/left_panel.stl"/>
            </geometry>
            <material name="Yellow"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
                <!--the collision boundary for parts are taken into account by collision boundary of the base_link-->
            </geometry>
        </collision>
    </link>
    <gazebo reference="base_footprint_left_panel_part">
        <material>Gazebo/Yellow</material>
    </gazebo>
    <joint name="base_footprint_right_panel_joint" type="fixed">
        <origin rpy="1.57079632679 0.0 -1.57079632679" xyz="0.0 0.35 0.05"/>
        <parent link="base_footprint"/>
        <child link="base_footprint_right_panel_part"/>
    </joint>
    <link name="base_footprint_right_panel_part">
        <inertial>
            <mass value="0.1"/>
            <origin xyz="0.0 0.0 0.0"/>
            <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <mesh filename="package://kingfisher_description/meshes/right_panel.stl"/>
            </geometry>
            <material name="Yellow"/>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0"/>
            <geometry>
                <box size="0.001 0.001 0.001"/>
                <!--the collision boundary for parts are taken into account by collision boundary of the base_link-->
            </geometry>
        </collision>
    </link>
    <gazebo reference="base_footprint_right_panel_part">
        <material>Gazebo/Yellow</material>
    </gazebo>
    <!--Gazebo Plugin for simulating Kingfisher dynamics-->
    <!-- <gazebo><plugin name="kingfisher_dynamic" filename="libkingfisher_gazebo_plugins.so"><maxForce>62.0</maxForce><bodyName>base_link</bodyName><waterDensity>997.7735</waterDensity><waterLevel>5</waterLevel><xyzDampingFactor>20.0</xyzDampingFactor><yawDampingFactor>20.0</yawDampingFactor><rolPitDampingFactor>5.0</rolPitDampingFactor></plugin></gazebo> -->
    <!-- Set up imu configuration -->
    <gazebo>
        <plugin filename="libgazebo_ros_imu.so" name="kingfisher_imu">
            <updateRate>20.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>imu/data</topicName>
            <rpyOffsets>0 0 0</rpyOffsets>
            <!-- deprecated -->
            <gaussianNoise>0</gaussianNoise>
            <!-- deprecated -->
            <accelDrift>0.5 0.5 0.5</accelDrift>
            <accelGaussianNoise>0.35 0.35 0.3</accelGaussianNoise>
            <rateDrift>0.1 0.1 0.1</rateDrift>
            <rateGaussianNoise>0.05 0.05 0.015</rateGaussianNoise>
            <headingDrift>0.1</headingDrift>
            <headingGaussianNoise>0.05</headingGaussianNoise>
        </plugin>
    </gazebo>
    <!-- Set up gps configuration -->
    <gazebo>
        <plugin filename="libhector_gazebo_ros_gps.so" name="kingfisher_gps">
            <alwaysOn>true</alwaysOn>
            <updateRate>10.0</updateRate>
            <bodyName>base_link</bodyName>
            <topicName>navsat/fix</topicName>
            <velocityTopicName>navsat/vel</velocityTopicName>
            <drift>5.0 5.0 5.0</drift>
            <gaussianNoise>0.1 0.1 0.1</gaussianNoise>
            <velocityDrift>0 0 0</velocityDrift>
            <velocityGaussianNoise>0.1 0.1 0.1</velocityGaussianNoise>
        </plugin>
    </gazebo>
    <!-- Set up camera linkage and configuration -->
    <joint name="base_link_camera_link_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.2"/>
        <parent link="base_link"/>
        <child link="camera_link"/>
    </joint>
    <link name="camera_link">
        <inertial>
            <mass value="1"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
        </inertial>
    </link>
    <gazebo reference="camera_link">
        <sensor name="camera" type="camera">
            <update_rate>30.0</update_rate>
            <camera name="kingfisher_camera">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <!-- Noise is sampled independently per pixel on each frame. That pixel's noise value is added to each of its color channels, which at that point lie in the range [0,1]. -->
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
                <alwaysOn>true</alwaysOn>
                <updateRate>30.0</updateRate>
                <cameraName>kingfisher/camera</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>
    <!--Gazebo Plugin for simulating WAM-V dynamics-->
    <gazebo>
        <plugin filename="libusv_gazebo_dynamics_plugin.so" name="usv_dynamics_kingfisher_dynamics_plugin">
            <bodyName>base_link</bodyName>
            <waterLevel>0</waterLevel>
            <!-- Must be same as the ocean model!-->
            <waterDensity>997.8</waterDensity>
            <cmdTimeout>1.0</cmdTimeout>
            <!-- Added mass -->
            <xDotU>0.0</xDotU>
            <yDotV>0.0</yDotV>
            <nDotR>0.0</nDotR>
            <!-- Linear and quadratic drag -->
            <xU>51.3</xU>
            <xUU>72.4</xUU>
            <yV>40.0</yV>
            <yVV>0.0</yVV>
            <zW>500.0</zW>
            <kP>50.0</kP>
            <mQ>50.0</mQ>
            <nR>400.0</nR>
            <nRR>0.0</nRR>
            <!-- General dimensions -->
            <boatArea>0.48</boatArea>
            <boatWidth>0.98</boatWidth>
            <boatLength>1.35</boatLength>
            <thrustOffsetZ>0.1</thrustOffsetZ>
            <metacentricLength>0.4</metacentricLength>
            <metacentricWidth>0.413</metacentricWidth>
            <!-- Waves x3 -->
            <wave_n>3</wave_n>
            <wave_amp0>0.06</wave_amp0>
            <wave_period0>12.6</wave_period0>
            <wave_direction0>-1 0</wave_direction0>
            <wave_amp1>0.04</wave_amp1>
            <wave_period1>3.7</wave_period1>
            <wave_direction1>-0.7 0.7</wave_direction1>
            <wave_amp2>0.03</wave_amp2>
            <wave_period2>6.3</wave_period2>
            <wave_direction2>0.7 0.7</wave_direction2>
        </plugin>
    </gazebo>
    <!--Gazebo Plugin for simulating WAM-V dynamics-->
    <gazebo>
        <plugin filename="libusv_gazebo_wind_plugin.so" name="usv_wind_kingfisher_wind_plugin">
            <bodyName>base_link</bodyName>
            <!-- Wind -->
            <wind_velocity_vector>0 0 0 </wind_velocity_vector>
            <!-- Coefficients from Sarda et al., "Station-keeping control of an unmanned surface vehicle exposed to current and wind disturbances Coefficients are x, y and yaw-->
            <wind_coeff_vector>0.5 0.5 0.33 </wind_coeff_vector>
        </plugin>
    </gazebo>
    <!--Gazebo Plugin for simulating WAM-V dynamics-->
    <gazebo>
        <plugin filename="libusv_gazebo_thrust_plugin.so" name="usv_thrust_kingfisher_thrust_plugin">
            <bodyName>base_link</bodyName>
            <!-- Which thruster curve to use -->
            <!-- Use 0 for linear mapping or 1 for nonlinear mapping -->
            <mappingType>1</mappingType>
            <!-- General dimensions -->
            <boatArea>0.48</boatArea>
            <boatWidth>0.98</boatWidth>
            <boatLength>1.35</boatLength>
            <thrustOffsetZ>-0.04</thrustOffsetZ>
            <!-- Thrust specification -->
            <maxCmd>1.0</maxCmd>
            <maxForceFwd>21</maxForceFwd>
            <maxForceRev>-6</maxForceRev>
            <cmdTimeout>1.0</cmdTimeout>
        </plugin>
    </gazebo>
</robot>